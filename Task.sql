/*1. write a SQL query to find all the orders issued by the salesman 'Paul Adam'.
   Return ord_no, purch_amt, ord_date, customer_id and salesman_id.*/
select ord_no,purch_amt,ord_date,customer_id,orders.salesman_id from orders join salesman on orders.salesman_id = salesman.salesman_id where salesman.name = 'Paul Adam';

/*2. write a SQL query to find all orders generated by London-based salespeople.
   Return ord_no, purch_amt, ord_date, customer_id, salesman_id.*/
select ord_no,purch_amt,ord_date,customer_id , orders.salesman_id from orders join salesman on orders.salesman_id = salesman.salesman_id where city = 'London';

/*3. write a SQL query to find all orders generated by the salespeople who may work
   for customers whose id is 3007.Return ord_no, purch_amt, ord_date, customer_id, salesman_id.*/
select ord_no,purch_amt,ord_date,customer.customer_id,orders.salesman_id from orders join customer on customer.salesman_id = orders.salesman_id where customer.salesman_id = (select salesman_id from customer where customer_id = 3007);

/*4. write a SQL query to find the order values greater than the average order value
   of 10th October 2012.Return ord_no, purch_amt, ord_date, customer_id, salesman_id.*/
select * from orders where purch_amt>(select avg(purch_amt) from orders where ord_date = '2012-10-10');

/*5. write a SQL query to find all the orders generated in New York city.
   Return ord_no, purch_amt, ord_date, customer_id and salesman_id.*/
select ord_no,purch_amt,ord_date,customer_id , orders.salesman_id from orders join salesman on orders.salesman_id = salesman.salesman_id where salesman.city = 'New York';

/*6. write a SQL query to determine the commission of the salespeople in Paris. Return commission.*/
select commission from salesman  where city = 'Paris';

/*7. Write a query to display all the customers whose ID is 2001 below the salesperson ID of Mc Lyon.*/
select * from customer where customer_id < (select salesman_id - 2001 from salesman where name = 'Mc Lyon');

/*8  write a SQL query to count the number of customers with grades above the average in New York City.
   Return grade and count.*/
select grade,count(*) as 'Count of Customers' from customer where grade > (select avg(grade) from customer where city = 'New York') group by grade; 

/*9.  write a SQL query to find those salespeople who earned the maximum commission.
    Return ord_no, purch_amt, ord_date, and salesman_id.*/
select ord_no,purch_amt,ord_date,customer_id,orders.salesman_id from orders join salesman on salesman.salesman_id = orders.salesman_id where commission = (select max(commission) from salesman);

/*10. From the following tables write SQL query to find the customers who placed orders on 17th August 2012.
    Return ord_no, purch_amt, ord_date, customer_id, salesman_id and cust_name.*/
select ord_no,purch_amt,ord_date,orders.customer_id,orders.salesman_id ,customer.cust_name from orders join customer on orders.salesman_id = customer.salesman_id where ord_date = '2012-08-17';

/*11. write a SQL query to find salespeople who had more than one customer. Return salesman_id and name.*/
select s.salesman_id, s.name from salesman s join (select salesman_id from customer group by salesman_id having count(*) > 1
) c on s.salesman_id = c.salesman_id;
 
 
/*
12.write a SQL query to find those orders, which are higher than the average amount of the orders.
*/
 
select ord_no, purch_amt, ord_date, customer_id, salesman_id from orders where purch_amt > (select avg(purch_amt) from orders);
 
/*
13. From the following tables write a SQL query to find those orders that are equal or higher than the
    average amount of the orders
*/
select ord_no, purch_amt, ord_date, customer_id, salesman_id
from orders where purch_amt > (select avg(purch_amt) from orders);

/*
14. Write a query to find the sums of the amounts from the orders table, grouped by date, and eliminate all dates
     where the sum was not at least 1000.00 above the maximum order amount for that date.
*/
 
select ord_date, sum(purch_amt) as total_amount
from orders group by ord_date having sum(purch_amt) >= max(purch_amt) + 1000;
 
/*
15..Write a query to extract all data from the customer table if and only if one or more of the customers in the customer table
  are located in London.
*/
select * from customer where exists (select 1from customer where city = 'London');
 
/*
16.write a SQL query to find salespeople who deal with multiple customers.
*/
 
select s.salesman_id, s.name, s.city, s.commission from salesman s join (
    select salesman_id from customer group by salesman_id having count(*) > 1
) c on s.salesman_id = c.salesman_id;
 
/*
17.Write a SQL query to find salespeople who deal with a single customer
*/
 
select s.salesman_id, s.name, s.city, s.commission from salesman s join (
    select salesman_id from customer group by salesman_id having count(*) = 1
) c on s.salesman_id = c.salesman_id;
 
/*
18.Write a SQL query to find the salespeople who deal the customers with more than one order.
*/
 
select  s.salesman_id, s.name, s.city, s.commission
from salesman s join customer c on s.salesman_id = c.salesman_id where c.customer_id in (
    select customer_id from orders group by customer_id having count(*) > 1);
 
/*
19.write a SQL query to find the salespeople who deal with those customers who live in the same city.
*/
select distinct s.salesman_id, s.name, s.city, s.commission from salesman s join customer c on s.salesman_id = c.salesman_id
where s.city = c.city;

/*
20.From the following tables write a SQL query to find salespeople whose place of residence matches
    any city where customers live
*/
select distinct s.salesman_id, s.name, s.city, s.commission
from salesman s where s.city in (select distinct city from customer);
 
/*
21.write a SQL query to find all those salespeople whose names appear alphabetically lower than the customerâ€™s name.
*/
 
select distinct s.salesman_id, s.name, s.city, s.commission
from salesman s where exists (select 1 from customer c where s.name < c.cust_name);
/*
22.write a SQL query to find all those customers with a higher grade than all the customers
*/
 
select customer_id, cust_name, city, grade, salesman_id from customer c1 where grade > all (
    select grade from customer c2 where c2.city > 'New York');
 
/*
23.write a SQL query to find all those orders whose order amount exceeds at least one of the
    orders placed on September 10th 2012
*/
 
select ord_no, purch_amt, ord_date, customer_id, salesman_id from orders o where purch_amt > any (
    select purch_amt from orders where ord_date = '2012-09-10');
 
/*
24.write a SQL query to find orders where the order amount is less than the order amount
    of a customer residing in London City
*/
 
select ord_no, purch_amt, ord_date, customer_id, salesman_id from orders o1 where purch_amt < any (
    select o2.purch_amt from orders o2 join customer c on o2.customer_id = c.customer_id
    where c.city = 'London');
    
/*
25.write a SQL query to find those orders where every order amount is less than the maximum
  order amount of a customer who lives in London City
*/
 
select ord_no, purch_amt, ord_date, customer_id, salesman_id from orders where purch_amt <
 (select max(o.purch_amt) from orders o join customer c on o.customer_id = c.customer_id
    where c.city = 'London');
 
 
/*
26.From the following tables write a SQL query to find those customers whose grades are higher than those living in New York City.
*/
 
select customer_id, cust_name, city, grade, salesman_id from customer c1 where grade > all (select grade from customer c2
    where c2.city = 'New York'
);
 